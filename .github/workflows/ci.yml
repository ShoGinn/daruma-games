---
name: Node.js CI
env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}
    DOCKER_PLATFORMS: linux/amd64, linux/arm64

on:
    workflow_dispatch:
    push:
        paths-ignore:
            - README.md
            - .github/**
            - locales/**
            - sounds/**
            - package.json
            - addons/**
    pull_request:

concurrency:
    group: ${{ github.head_ref || github.run_id }}
    cancel-in-progress: true

jobs:
    CommitLint:
        name: Lint Commit Messages
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0
            - uses: wagoid/commitlint-github-action@v5.4.3

    quality:
        name: Build the Node
        needs:
            - CommitLint
        runs-on: ubuntu-latest
        steps:
            # -----------------------------------------------------------------------
            #                    Check out The Repository
            # -----------------------------------------------------------------------
            - name: üíæ Check out repository
              uses: actions/checkout@v4

            # -----------------------------------------------------------------------
            #                    Install Node.js and npm
            # -----------------------------------------------------------------------
            - name: üì¶ Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '18.x'
                  cache: 'npm'

            # -----------------------------------------------------------------------
            #                    Cache node modules
            # -----------------------------------------------------------------------
            - name: üì¶ Cache node modules
              id: cache-npm
              uses: actions/cache@v3
              env:
                  cache-name: cache-node-modules
              with:
                  # npm cache files are stored in `~/.npm` on Linux/macOS
                  path: ~/.npm
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-

            # -----------------------------------------------------------------------
            #                    List the state of node modules
            # -----------------------------------------------------------------------
            - if: ${{ steps.cache-npm.outputs.cache-hit == 'false' }}
              name: List the state of node modules
              continue-on-error: true
              run: npm list

            # -----------------------------------------------------------------------
            #                    Install dependencies
            # -----------------------------------------------------------------------
            - name: Install dependencies
              run: npm ci

            # -----------------------------------------------------------------------
            #                    Build and lint
            # -----------------------------------------------------------------------
            - name: Build
              run: npm run build --if-present
            - name: Lint
              run: npm run lint

            # -----------------------------------------------------------------------
            #                    Run tests
            # -----------------------------------------------------------------------
            - name: Test
              run: npm run test:coverage -- --verbose

            # -----------------------------------------------------------------------
            #                    Upload coverage
            # -----------------------------------------------------------------------
            - name: Upload coverage reports to Codecov
              uses: codecov/codecov-action@v3
              env:
                  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    release:
        name: Semantic Release
        runs-on: ubuntu-latest
        needs:
            - CommitLint
            - quality
        if: github.ref == 'refs/heads/main'
        steps:
            - uses: google-github-actions/release-please-action@v3
              with:
                  release-type: node
                  package-name: daruma-games
    GitHubPackage:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
        needs:
            - CommitLint
            - quality
        steps:
            - name: üíæ Check out repository
              uses: actions/checkout@v4

            - name: üñ•Ô∏è Set up QEMU
              uses: docker/setup-qemu-action@v2

            - name: üì¶ Set up container buildx
              uses: docker/setup-buildx-action@v2

            - name: üîë Log in to the container registry
              uses: docker/login-action@v2.2.0
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: üì° Collect image metadata
              id: meta
              uses: docker/metadata-action@v4.6.0
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                  tags: |
                      type=edge

            - name: üì¶ Build and publish container image
              uses: docker/build-push-action@v5.0.0
              with:
                  context: .
                  platforms: ${{ env.DOCKER_PLATFORMS }}
                  push: ${{ github.event_name != 'pull_request' }}
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
